#!/usr/bin/perl

use strict;
use warnings;
my $dbfile = 'database.db';      # your database file

use sqlite_handler;
sqlite_handler::init_db($dbfile) if not -e $dbfile;

sub refresh_info_from_system {
   # Read user information out of passwd
   # update database information
   # create a working table
   my $sql_run = "create temp table tmpuser (".
                 "id integer primary key, ".
                 "username char(50) unique not null, ".
                 "fullname char(50) not null, ".
                 "email char(50),".
                 "home char(50) not null," .
                 "status integer not null,".
                 "expire_date DATE not null); ";
   open(PASSWD, "</etc/passwd");
   for (<PASSWD>) {
      chomp;
      my @fields = split ":";
      $fields[4] =~ m/(.*)(<.*>)?/;
      my $email;
      if ($2) { $email = $2; } else { $email = ""; }
      my $name = $1;
      if ($fields[2] >= 1000) {
         $sql_run .= "INSERT INTO tmpuser".
               "(id, username, fullname, email, home, status, expire_date) VALUES ".
               "($fields[2], '$fields[0]', '$name', '$email', '$fields[5]', 1, date('now')); ";
      }
   }
   close PASSWD;
   $sql_run .= "insert into users select * from tmpuser where tmpuser.id not in (select id from users);";

   $sql_run .= "CREATE temp TABLE tmpgroups (id integer primary key, name char(50) not null, description char(200) );";
   $sql_run .= "CREATE temp TABLE tmpmemb (user_name integer, group_id integer, primary key (user_name, group_id), foreign key (user_name) references users(username), foreign key (group_id) references groups(id) );";
   $sql_run .= "delete from group_memberships;";
   open(GROUPS, "</etc/group");
   for (<GROUPS>) {
      chomp;
      my @gargs = split ':';
      my @gu = split ',', $gargs[3] if $gargs[3];
      $sql_run .= "INSERT INTO tmpgroups (id, name) VALUES($gargs[2], '$gargs[0]');";
      for (@gu) {
         $sql_run .= "INSERT INTO tmpmemb VALUES ('$_' , $gargs[2]);";
      }
   }
   $sql_run .= "INSERT INTO groups select * from tmpgroups where id not in (select id from groups);";
   $sql_run .= "insert into group_memberships select * from (select users.id as uid, tmpmemb.group_id as gid from tmpmemb inner join users  on users.username == tmpmemb.user_name) as source except select * from group_memberships;";
   close GROUPS;
   sqlite_handler::run_transaction($dbfile, $sql_run);
}

&refresh_info_from_system();
