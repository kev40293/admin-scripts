Core:
   Logging for debug and errors

 * initialize db from passwd - working (could be improved)

   improve the table schemas - work in progress

 * scan for activity and update database - postponed, possibly unecessary

 * scanning functions for expiring/archiving/deleting users - done

 * sql request data function - done

   incorporate system user expiration

   per user defaults/create user options like shell etc

   Full Documentation (w/ perldoc)

   shadow database/ archive recovery with password

   configureable database name
   ***configuration file
      how long till expire
      how long till delete
      how long till archives removed

   better consistency of names in functions

   sql parameterization

   Priveledge detection and escalation

   Remove need for system calls to functions. Try to find some perl modules

   Tests, tests, tests

   db run sql abstraction function, that pre-prepares all of the necessary sql queries
   aggregate all queries to one location, and store prepared handles in hash

Actions:
 * user insert (database) - working

 * user remove (database) - working

 * add to group - working

 * remove from group - working

   data lookup functions (ie emails, name search etc)

System/Cron:
   Cron files for auto running tasks

Frontend:
   wrap all funcionality into a console/cli application

   ie landlord ACTION
   or llconsole  read commands and execute
